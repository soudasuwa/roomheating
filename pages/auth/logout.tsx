import axios from "axios"
import type { NextPage } from "next"
import Head from "next/head"
import { useContext, useEffect, useState } from "react"
import footer from "src/parts/footer"
import styles from "styles/Home.module.css"
import { AUTH_LOGOUT } from "src/enum"
import { AUTH_STATUS } from "src/enum"
import { useAuthStatus, useRevalidateAuth } from "src/use"
import { DashboardCard, HomepageCard, LoginCard, LogoutConfirmCard } from "src/parts/cards"
import { GlobalContext } from "src/contexts"

const { SUCCESS, NOAUTH, ERROR } = AUTH_LOGOUT

const LoginPage: NextPage = () => {
  const revalidateAuth = useRevalidateAuth()
  const global = useContext(GlobalContext)
  const status = useAuthStatus()
  const [error, setError] = useState<string | undefined>(undefined)

  useEffect(() => {
    if (status === AUTH_STATUS.NOAUTH) setError("You are not logged in")
  }, [status])

  const logout = async () => {
    const { data } = await axios.get("/api/auth/logout")
    const result =
      data === SUCCESS
        ? "success"
        : data === NOAUTH
        ? "you were not logged in"
        : data === ERROR
        ? "error occured"
        : "UNKOWN"

    setError("Logout: " + result)
    revalidateAuth()
    console.log(data)
  }

  const errorBlock = (
    <span className={`${styles.code} ${error !== undefined && styles.error}`}>
      {error || !global.isAuthenticated ? <>You are not logged in</> : <>status...</>}
    </span>
  )

  return (
    <div className={styles.container}>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Logout form</h1>
        {errorBlock}

        <div className={styles.grid}>
          <LogoutConfirmCard onClick={logout} />
          <LoginCard />
          <HomepageCard />
          <DashboardCard />
        </div>
      </main>

      {footer}
    </div>
  )
}

export default LoginPage
